<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="Mvdi_relMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="Mvdi_rel" type="study.java.mvmanangement.model.Mvdi_rel">
		<!-- Beans의 멤버변수(property)이름과 
			대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="mcode" column="mcode" />
		<result property="dcode" column="dcode" />
	</resultMap>
	
	<!--
		데이터 저장을 위한 기능 정의
		<insert id="메서드이름에 해당하는 식별자" 
				parameterType="파라미터의 데이터 타입(Beans의 클래스명)" 
				useGeneratedKeys="자동증가 일련번호값 리턴 여부" 
				keyProperty="자동증가 일련번호 컬럼명">
	-->
	<insert id="add_Mvdi_rel" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel" 
	    	useGeneratedKeys="true">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		INSERT INTO Mvdi_rel (mcode, dcode) 
		VALUES (#{mcode},#{dcode});
	</insert>

	<!--
		데이터 삭제를 위한 기능 정의
		<delete id="메서드이름에 해당하는 식별자" 
				parameterType="파라미터의 데이터 타입(Beans의 클래스명)">
	-->
	<delete id="remove_Mvdi_rel_bymcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		DELETE FROM Mvdi_rel WHERE mcode=#{mcode};
	</delete>
	<delete id="remove_Mvdi_rel_bydcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		DELETE FROM Mvdi_rel WHERE dcode=#{dcode};
	</delete>
	

	<!--
		데이터 갱신을 위한 기능 정의
		<update id="메서드이름에 해당하는 식별자" 
				parameterType="파라미터의 데이터 타입(Beans의 클래스명)">
	-->
	<update id="edit_Mvdi_rel_bymcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		UPDATE Mvdi_rel SET mcode=#{mcode},dcode=#{dcode} WHERE mcode=#{mcode};
	</update>
		<update id="edit_Mvdi_rel_bydcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		UPDATE Mvdi_rel SET mcode=#{mcode},dcode=#{dcode} WHERE mcode=#{dcode};
	</update>

	<!--
		단일행 조회를 위한 기능 정의
		<select id="메서드이름에 해당하는 식별자"
				parameterType="파라미터의 데이터 타입(Beans의 클래스명)" 
				resultMap="리턴될 Beans이름">
	-->
	<select id="get_Mvdi_rel_item_bymcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel" 
	    	resultMap="Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
		SELECT * FROM Mvdi_rel WHERE mcode=#{mcode};
	</select>

	<select id="get_Mvdi_rel_item_bydcode" 
	    	parameterType="study.java.mvmanangement.model.Mvdi_rel" 
	    	resultMap="Mvdi_rel">
		<!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
		SELECT * FROM Mvdi_rel WHERE dcode=#{dcode};
	</select>

	<!--
		다중행 조회를 위한 기능 정의
		<select id="메서드이름에 해당하는 식별자" 
				resultMap="리턴될 Beans이름">
	-->
	<select id="get_Mvdi_rel_list" resultMap="Mvdi_rel">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		SELECT * FROM Mvdi_rel;
	</select>

</mapper>